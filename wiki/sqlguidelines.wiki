#summary How to prepare database changes in releases
[home] -> [documentation] -> [makedistr] -> [sqlguidelines]

This page contains guidelines to developers on how to prepare database changes in releases.

<wiki:toc max_depth="2" />
----

= Change Procedure = 

*developer:*
  * adds change to change set or initiates release (see release modes)
  * commits changes to release codebase
  * adds instructions to deployment plan if change is manual
  * prepares data files if huge data are going to be loaded into the database

*release engineer or DBA:*
  * reviews change details and prepares distributive
  * applies change to database using automatic or manual procedure

*developer & QA:*
  * verifies change and reports change as tested

*DBA:*
  * applies change to production database

= Database Changes Overview = 

  * database changes differ from binaries in that code changes for binary files are applied to VCS and binary files are delivered as a state snapshot to environment, while database changes are generally incremental, except for changing database code like stored procedures
  * when replicating database changes in distributed environment or among environments, it is important to avoid storing duplicate files in VCS, because of repetitive nature of release preparation stage (which requires a sort of templating for sql scripts)
  * when database change is applied to database it is important that its initial state is the same as will be in production database (which requires manual rollbacks or database refresh process)
  * database change can be SQL script, PL-SQL script or sqlldr control and data files

= Database Changes Codebase = 

  * database changes have to be commited to:
{{{
$C_CONFIG_SOURCE_RELEASEROOTDIR/$C_CONFIG_RELEASE_GROUPFOLDER/$C_CONFIG_APPVERSION_RELEASEFOLDER/sql

All params are defined in config.sh.
Default practices:
$C_CONFIG_RELEASE_GROUPFOLDER:
"R_${C_CONFIG_VERSION_BRANCH_MAJOR}_${C_CONFIG_VERSION_BRANCH_NEXTMINOR}"

$C_CONFIG_APPVERSION_RELEASEFOLDER:
"major-release-$C_CONFIG_NEXT_MAJORRELEASE"
for all modes, except minor planned release and script release

In minor release 
$C_CONFIG_APPVERSION_RELEASEFOLDER:
"prod-patch-$C_CONFIG_NEXT_MAJORRELEASE.$C_CONFIG_NEXT_VERSION_BUILD"
$C_CONFIG_NEXT_VERSION_BUILD is defined by default as 
number in etc/last-prod-tag.txt + 1

Script release has no predefined constant and 
its recommended name is 4-number - X.Y.Z.T with release folder - prod-patch-X.Y.Z.T
}}}

= Preparing Database Change = 

== Release Directory Structure ==

  * codebase splits changes into groups to establish database change policy and allow DBA to review changes:
{{{
primary script folders:
coreddl - SQL or PL-SQL files with DDL SQL (can include related DML SQL)
coredml - SQL or PL-SQL files with DML SQL
coreuatonly - DML SQL scripts to be applied only to non-prod environments
coreprodonly - DML SQL scripts to be applied only to prod environments
dataload - control and data files for sqlldr utility

additional folders to enable replicated regional scripts:
aligned/<alignedid>/<primary script folder>
aligned/regional/<primary script folder>
}}}

== Release File Names ==

== Adding Files for sqlldr ==

  * to make of of sqlldr functionality you need to place control and data files to dataload folder of release directory
  * sqlldr file set consists of one control file and one or several data files
  * control file and referenced data files should have the same index number
  * see Oracle Documentation on how to prepare control and data files
{{{
Note, that file with txt extension will be processed by removing CR symbols, created in Windows environment
If you don't need such activity - use any other extension
}}}
  * if data files are too big to pass through VCS, contact release engineer to place sqlldr file set directly into distributive, better create separate script release for such a change 

== Database Change Numbering ==

== Script File Content Rules ==

== Syntax Notes ==

== Applied Script Accounting ==

= Environment-Dependent Changes = 

= Release Modes = 

= Manual Operations = 